name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CR_REGISTRY: 2048-game-team
  GAME_IMAGE: ghcr.io/2048-game-team/game:${{ github.sha }}
  NGINX_IMAGE: ghcr.io/2048-game-team/nginx:${{ github.sha }}

jobs:
  build-game:
    runs-on: ubuntu-latest
    environment:
      name: prod

    steps:
      - uses: actions/checkout@v3

      - name: Create env file
        run: |
          touch .env
          echo VITE_ROOT_PATH=${{ vars.ROOT_PATH }} >> .env
          echo VITE_GAME_URL=${{ vars.GAME_URL }} >> .env
          echo VITE_BACKEND_URL=${{ vars.BACKEND_URL }} >> .env
          cat .env

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build, tag, and push image to GitHub Container Registry
        env:
          CR_REPOSITORY: game
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ghcr.io/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG . -f Dockerfile.server
          docker push ghcr.io/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

  build-nginx:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nginx

    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build, tag, and push image to GitHub Container Registry
        env:
          CR_REPOSITORY: nginx
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ghcr.io/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG . 
          docker push ghcr.io/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

  update-coi:
    needs: [ build-game, build-nginx ]
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: ${{ vars.GAME_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1.2.0
        env:
          GAME_IMAGE: ${{ env.GAME_IMAGE }}
          NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          FRONTEND_URL: ${{ vars.FRONTEND_URL }}
          BACKEND_URL: ${{ vars.BACKEND_URL }}
          PAYTURE_URL: ${{ vars.PAYTURE_URL }}
          PAYTURE_TERMINAL_RUB: ${{ vars.PAYTURE_TERMINAL_RUB }}
          PAYTURE_TERMINAL_USD: ${{ vars.PAYTURE_TERMINAL_USD }}
          PAYTURE_TERMINAL_PASSWORD: ${{ secrets.PAYTURE_TERMINAL_PASSWORD }}
          NALOG_INN: ${{ vars.NALOG_INN }}
          NALOG_PASSWORD: ${{ secrets.NALOG_PASSWORD }}
          YOOKASSA_ID: ${{ vars.YOOKASSA_ID }}
          YOOKASSA_SECRET: ${{ secrets.YOOKASSA_SECRET }}
          SERVICE_KEY_ID: ${{ vars.SERVICE_KEY_ID }}
          SERVICE_KEY_SECRET: ${{ secrets.SERVICE_KEY_SECRET }}
          NGINX_CERT: ${{ secrets.NGINX_CERT }}
          NGINX_CERT_KEY: ${{ secrets.NGINX_CERT_KEY }}
          YC_GROUP_ID: ${{ secrets.YC_GROUP_ID }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: b1g4s4k8tj83buc1hdoq
          vm-name: just-study
          vm-service-account-id: aje38cdteqcfo55pe02h
          vm-cores: 2
          vm-memory: 2GB
          vm-disk-size: 30Gb
          vm-core-fraction: 50
          vm-zone-id: ru-central1-a
          vm-subnet-id: e9b0mid7cobe4c9paohd
          docker-compose-path: './yandex-cloud/docker-compose.yaml'
          user-data-path: './yandex-cloud/user-data.yaml'
